// <auto-generated />
using System;
using LibraryUnivercity.entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LibraryUnivercity.Migrations
{
    [DbContext(typeof(DataBase))]
    partial class DataBaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("LibraryUnivercity.entity.Books", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BookCode")
                        .HasColumnType("integer");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("BookWriter")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("BookID");

                    b.HasIndex("UserID");

                    b.ToTable("books");
                });

            modelBuilder.Entity("LibraryUnivercity.entity.Librarian", b =>
                {
                    b.Property<int>("LibrarianID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("LibrarianAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LibrarianLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LibrarianName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("LibrarianPhoneNumber")
                        .HasColumnType("integer");

                    b.HasKey("LibrarianID");

                    b.ToTable("librarians");
                });

            modelBuilder.Entity("LibraryUnivercity.entity.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("UserAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UserBirthday")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.Property<string>("UserJob")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UserNationNumber")
                        .HasColumnType("integer");

                    b.HasKey("UserID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("LibraryUnivercity.entity.Books", b =>
                {
                    b.HasOne("LibraryUnivercity.entity.User", "user")
                        .WithMany("rerbooks")
                        .HasForeignKey("UserID");

                    b.Navigation("user");
                });

            modelBuilder.Entity("LibraryUnivercity.entity.User", b =>
                {
                    b.Navigation("rerbooks");
                });
#pragma warning restore 612, 618
        }
    }
}
